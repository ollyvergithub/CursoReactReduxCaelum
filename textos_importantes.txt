Instrutor Italo
email: italo.moraes@caelum.com.br
https://github.com/itumoraes/react-com-rotas
https://github.com/itumoraes/twitelum/releases

https://gs.statcounter.com/
https://react.christmas/

Props Drilling
One Way Data Flow
Single Source of True (Singleton)
Redux / Mobx

https://github.com/omariosouto/twitelum-api
Para ativar a API Local, npm i e depois npm start

// Só criamos classe quando precisamos manipular estado

Passando uma funcção para o setState
this.setState((state, props) =>({
	count: state.count + 1,
}))



**************** AULA 01 **************** 

Shadow DOM 

O Redux serve para gerenciar estados

Atomic Design
https://bradfrost.com/blog/post/atomic-web-design/


O Paranteses do return é necessario qundo queremos quebrar em varias linhas o codigo

*** Desestruturação de objetos
const obj = {
	a:1,
	b:2
}

const {a, b} = obj

https://cio.com.br/4-principios-do-chaos-engineering/
https://pt.shopify.com/

https://github.com/caelum/arquivos-js46

https://eslint.org/

**************** AULA 02 **************** 

<Fragment><Fragment/> ou <> </>

Context - Compartilhamento de informações rápidas

// msg && Quer dizer Se existir msg - faça

Hooks

Refs

async e await - LoginPage/index

**************** AULA 03 **************** 

Hooks, lifeCycles, Prototypes, passando função para o setState

**************** AULA 04 **************** 
Redux, Duck, Thunk
- Fiz até a aula 34






