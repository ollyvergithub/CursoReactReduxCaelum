{"ast":null,"code":"var _jsxFileName = \"/home/react8582/Desktop/cursoCaelumReactRedux/twitelum-redux/src/pages/HomePage/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport Cabecalho from '../../components/Cabecalho';\nimport NavMenu from '../../components/NavMenu';\nimport Dashboard from '../../components/Dashboard';\nimport Widget from '../../components/Widget';\nimport TrendsArea from '../../components/TrendsArea';\nimport ApiLogin from \"../../ApiConfig\";\nimport Tweet from '../../components/Tweet';\nimport Helmet from \"react-helmet\";\nimport { Modal } from \"../../components/Modal\"; // Simulando um Helper\n\nconst isButtonDisabel = novoTweet => {\n  return novoTweet.length > 140 || novoTweet.length === 0;\n}; // As chaves {} obriga dar um return\n// Se chamarmos a funcao com (), se tiver setState ficarÃ¡ num Loop infinito\n\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n\n    this.abreModal = tweetQueVaiProModal => {\n      this.setState({\n        tweetAtivoNoModal: tweetQueVaiProModal\n      }, () => {\n        console.log(this.state.tweetAtivoNoModal);\n      });\n    };\n\n    this.fechaModal = () => this.setState({\n      tweetAtivoNoModal: {}\n    });\n\n    this.adicionaTweet = infosDoEvento => {\n      infosDoEvento.preventDefault();\n      console.log(\"Entrei aqui\");\n\n      if (this.state.novoTweet.length > 0) {\n        fetch(\"\".concat(ApiLogin.url, \"/tweets?X-AUTH-TOKEN=\").concat(localStorage.getItem('TOKEN')), {\n          method: \"POST\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify({\n            conteudo: this.state.novoTweet\n          })\n        }).then(respostaDoServidor => {\n          return respostaDoServidor.json();\n        }).then(tweetVindoDoServidor => {\n          console.log(tweetVindoDoServidor);\n          this.setState({\n            tweets: [tweetVindoDoServidor, ...this.state.tweets]\n          });\n        });\n      }\n    };\n\n    this.mapTweets = () => {\n      const tweets = this.state.tweets;\n      console.log(\"Ollyver \", tweets);\n\n      if (tweets.length) {\n        return tweets.map((tweetInfo, index) => React.createElement(Tweet, {\n          key: tweetInfo._id,\n          id: tweetInfo._id,\n          texto: tweetInfo.conteudo,\n          usuario: tweetInfo.usuario,\n          likeado: tweetInfo.likeado,\n          totalLikes: tweetInfo.totalLikes,\n          removivel: tweetInfo.removivel,\n          removeHandler: event => this.removeTweet(tweetInfo._id),\n          onClickNaAreaDeConteudo: () => this.abreModal(tweetInfo),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Nenhum Tweet encontrado, crie o seu primeiro Tweet\");\n    };\n\n    this.state = {\n      novoTweet: '',\n      tweets: [],\n      lista: ['item 01', 'item 02'],\n      tweetAtivoNoModal: {}\n    };\n  }\n\n  componentDidMount() {\n    // Usando Redux\n    window.store.subscribe(() => {\n      this.setState({\n        tweets: window.store.getState()\n      });\n    }).then(tweets => {\n      //this.setState({tweets})\n      // Usando Redux\n      window.store.dispatch({\n        type: 'CARREGA_TWEETS',\n        tweets\n      });\n    });\n  }\n\n  removeTweet(idTweetQueVaiSerRemovido) {\n    console.log(idTweetQueVaiSerRemovido);\n    fetch(\"\".concat(ApiLogin.url, \"/tweets/\").concat(idTweetQueVaiSerRemovido, \"?X-AUTH-TOKEN=\").concat(localStorage.getItem('TOKEN')), {\n      method: 'DELETE'\n    }).then(data => data.json()).then(response => {\n      console.log(response);\n      const listaDeTweetsAtualizada = this.state.tweets.filter(tweet => tweet._id !== idTweetQueVaiSerRemovido);\n      this.setState({\n        tweets: listaDeTweetsAtualizada\n      });\n      this.fechaModal();\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Twitelum N\\xFAmero de Tweets - (\", \"\".concat(this.state.tweets.le), \")\")), React.createElement(Cabecalho, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(NavMenu, {\n      usuario: \"@omariosouto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Dashboard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"novoTweet\",\n      onSubmit: this.adicionaTweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"novoTweet__editorArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"novoTweet__status \".concat(this.state.novoTweet.length > 140 ? ' novoTweet__status--invalido' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.novoTweet.length, \"/140\"), React.createElement(\"textarea\", {\n      className: \"novoTweet__editor\",\n      value: this.state.novoTweet,\n      onChange: event => this.setState({\n        novoTweet: event.target.value\n      }),\n      placeholder: \"O que est\\xE1 acontecendo?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"novoTweet__envia\",\n      disabled: isButtonDisabel(this.state.novoTweet),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Tweetar\"))), React.createElement(Widget, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(TrendsArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(Dashboard, {\n      posicao: \"centro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Widget, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweetsArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.mapTweets())))), React.createElement(Modal, {\n      isAberto: Boolean(this.state.tweetAtivoNoModal._id),\n      onFechando: this.fechaModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, () => React.createElement(Tweet, {\n      key: this.state.tweetAtivoNoModal._id,\n      id: this.state.tweetAtivoNoModal._id,\n      texto: this.state.tweetAtivoNoModal.conteudo,\n      usuario: this.state.tweetAtivoNoModal.usuario,\n      likeado: this.state.tweetAtivoNoModal.likeado,\n      totalLikes: this.state.tweetAtivoNoModal.totalLikes,\n      removivel: this.state.tweetAtivoNoModal.removivel,\n      removeHandler: () => this.removeTweet(this.state.tweetAtivoNoModal._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/react8582/Desktop/cursoCaelumReactRedux/twitelum-redux/src/pages/HomePage/index.js"],"names":["React","Component","Fragment","Cabecalho","NavMenu","Dashboard","Widget","TrendsArea","ApiLogin","Tweet","Helmet","Modal","isButtonDisabel","novoTweet","length","HomePage","constructor","abreModal","tweetQueVaiProModal","setState","tweetAtivoNoModal","console","log","state","fechaModal","adicionaTweet","infosDoEvento","preventDefault","fetch","url","localStorage","getItem","method","headers","body","JSON","stringify","conteudo","then","respostaDoServidor","json","tweetVindoDoServidor","tweets","mapTweets","map","tweetInfo","index","_id","usuario","likeado","totalLikes","removivel","event","removeTweet","lista","componentDidMount","window","store","subscribe","getState","dispatch","type","idTweetQueVaiSerRemovido","data","response","listaDeTweetsAtualizada","filter","tweet","render","le","target","value","Boolean"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport Cabecalho from '../../components/Cabecalho'\nimport NavMenu from '../../components/NavMenu'\nimport Dashboard from '../../components/Dashboard'\nimport Widget from '../../components/Widget'\nimport TrendsArea from '../../components/TrendsArea'\nimport ApiLogin from \"../../ApiConfig\"\nimport Tweet from '../../components/Tweet'\nimport Helmet from \"react-helmet\"\nimport {Modal} from \"../../components/Modal\"\n\n// Simulando um Helper\nconst isButtonDisabel = (novoTweet) => {\n    return novoTweet.length > 140 || novoTweet.length === 0\n}\n\n// As chaves {} obriga dar um return\n// Se chamarmos a funcao com (), se tiver setState ficarÃ¡ num Loop infinito\n\nclass HomePage extends Component {\n    constructor() {\n        super()\n        this.state = {\n            novoTweet: '',\n            tweets: [],\n            lista: ['item 01', 'item 02'],\n            tweetAtivoNoModal: {}\n        }\n    }\n\n    componentDidMount(){\n    // Usando Redux\n        window.store.subscribe(() => {\n            this.setState({\n                tweets: window.store.getState()\n            })\n        })\n\n\n        .then((tweets) =>{\n            //this.setState({tweets})\n\n            // Usando Redux\n            window.store.dispatch({type: 'CARREGA_TWEETS', tweets})\n        })\n    }\n\n    abreModal = tweetQueVaiProModal => {\n        this.setState({\n            tweetAtivoNoModal: tweetQueVaiProModal,\n        }, () => {\n            console.log(this.state.tweetAtivoNoModal)\n        })\n    }\n\n    fechaModal = () => this.setState({tweetAtivoNoModal:{} })\n\n    removeTweet(idTweetQueVaiSerRemovido){\n        console.log(idTweetQueVaiSerRemovido)\n        fetch(`${ApiLogin.url}/tweets/${idTweetQueVaiSerRemovido}?X-AUTH-TOKEN=${localStorage.getItem('TOKEN')}`,\n        {method:'DELETE'})\n        .then((data) => data.json())\n        .then((response) => {\n            console.log(response)\n            const listaDeTweetsAtualizada = this.state.tweets.filter((tweet) => tweet._id !== idTweetQueVaiSerRemovido)\n            this.setState({\n                tweets: listaDeTweetsAtualizada\n            })\n            this.fechaModal()\n        })\n    }\n\n    adicionaTweet = (infosDoEvento) => {\n\n        infosDoEvento.preventDefault()\n\n        console.log(\"Entrei aqui\")\n\n        if(this.state.novoTweet.length > 0){\n\n            fetch(`${ApiLogin.url}/tweets?X-AUTH-TOKEN=${localStorage.getItem('TOKEN')}`,\n            {\n                method:\"POST\",\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({conteudo: this.state.novoTweet})\n            })\n            .then((respostaDoServidor) => {\n                return respostaDoServidor.json()\n            })\n            .then((tweetVindoDoServidor) =>{\n                console.log(tweetVindoDoServidor)\n                this.setState({\n                    tweets: [tweetVindoDoServidor, ...this.state.tweets]\n                })\n            })\n        }\n\n\n    }\n\n    mapTweets = () =>{\n\n        const {tweets} = this.state\n\n        console.log(\"Ollyver \", tweets)\n\n        if(tweets.length) {\n\n            return tweets.map((tweetInfo, index) => \n                <Tweet\n                key= {tweetInfo._id}\n                id= {tweetInfo._id}\n                texto  = {tweetInfo.conteudo}\n                usuario  = {tweetInfo.usuario}\n                likeado= {tweetInfo.likeado}\n                totalLikes= {tweetInfo.totalLikes}\n                removivel={tweetInfo.removivel}\n                removeHandler={(event) => this.removeTweet(tweetInfo._id)}\n                onClickNaAreaDeConteudo={() => this.abreModal(tweetInfo)}\n\n            />)\n        }\n\n        return <p>Nenhum Tweet encontrado, crie o seu primeiro Tweet</p>\n\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n                <Helmet>\n                    <title>Twitelum NÃºmero de Tweets - ({`${this.state.tweets.le}`})</title>\n                </Helmet>\n                <Cabecalho>\n                    <NavMenu usuario=\"@omariosouto\"/>\n                </Cabecalho>\n                <div className=\"container\">\n                    <Dashboard>\n                        <Widget>\n                            <form className=\"novoTweet\" onSubmit={this.adicionaTweet}>\n                                <div className=\"novoTweet__editorArea\">\n                            <span className={\n                                `novoTweet__status ${this.state.novoTweet.length > 140 ? ' novoTweet__status--invalido' : ''}`\n                            }\n                            >\n                                {this.state.novoTweet.length}/140</span>\n                                    <textarea className=\"novoTweet__editor\"\n                                              value={this.state.novoTweet}\n                                              onChange={(event) => this.setState({novoTweet: event.target.value})}\n                                              placeholder=\"O que estÃ¡ acontecendo?\"></textarea>\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"novoTweet__envia\"\n                                    disabled={isButtonDisabel(this.state.novoTweet)\n                                    }\n                                >\n                                    Tweetar\n                                </button>\n                            </form>\n                        </Widget>\n                        <Widget>\n                            <TrendsArea/>\n                        </Widget>\n                    </Dashboard>\n                    <Dashboard posicao=\"centro\">\n                        <Widget>\n                            <div className=\"tweetsArea\">\n\n                                {this.mapTweets()}\n\n                                { /*this.state.tweets.length > 0 ? (\n\n                                    this.state.tweets.map(\n                                        (tweetInfo, index) => {\n                                            return (\n                                                <Tweet\n                                                    key={tweetInfo + index}\n                                                    texto={tweetInfo}\n                                                />\n                                            )\n                                        }\n                                    )\n                                ) : \"Nenhum Tweet encontrado, crie o seu primeiro Tweet\"*/}\n\n                            </div>\n                        </Widget>\n                    </Dashboard>\n                </div>\n                <Modal\n                    isAberto={Boolean(this.state.tweetAtivoNoModal._id)}\n                    onFechando={this.fechaModal}\n                >\n                    {\n                        () => (\n                            <Tweet\n                                key= {this.state.tweetAtivoNoModal._id}\n                                id= {this.state.tweetAtivoNoModal._id}\n                                texto  = {this.state.tweetAtivoNoModal.conteudo}\n                                usuario  = {this.state.tweetAtivoNoModal.usuario}\n                                likeado= {this.state.tweetAtivoNoModal.likeado}\n                                totalLikes= {this.state.tweetAtivoNoModal.totalLikes}\n                                removivel={this.state.tweetAtivoNoModal.removivel}\n                                removeHandler={() => this.removeTweet(this.state.tweetAtivoNoModal._id)}\n\n                        />\n                        )\n                    }\n\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}